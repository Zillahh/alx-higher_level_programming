========================
print square doctest
=======================

	>>> print_square = __import__('4-print_square').print_square
>>> print_square(4)
####
####
####
####

	::

	let us print more valid integers

>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########

	::

	more valid int

>>> print_square(0)


	::

	let us try one int

>>> print_square(1)
#

	::

	let us try negative nu numbers

>>> print_square(-1)
	Traceback (most recent call last):
		ValueError: size must be >= 0

		::

		let us deal with the first exception: size must be int

		>>> print_square("yes")
		Traceback (most recent call last):
			TypeError: size must be an integer

			::

			let us try turple

>>> print_square((9,))
	Traceback (most recent call last):
		TypeError: size must be an integer

		::

		let us try a list

>>> print_square([2, 4])
	Traceback (most recent call last):
		TypeError: size must be an integer

		::

		let us try empty list

>>> print_square([])
	Traceback (most recent call last):
		TypeError: size must be an integer

		::

		LET US TRY NESTED LIST

>>> print_square([[2, 3], [4, 6]])
	Traceback (most recent call last):
		TypeError: size must be an integer

		::

		let us try a dictionary

		>>> print_square({2 : "yes"})
		Traceback (most recent call last):
			TypeError: size must be an integer

			::

			let us try a set

>>> print_square({2, 4})
	Traceback (most recent call last):
		TypeError: size must be an integer

		::

		let us try a float

>>> print_square(4.7)
	Traceback (most recent call last):
		TypeError: size must be an integer

		::

>>> print_square(0.0)
	Traceback (most recent call last):
		TypeError: size must be an integer

		::

>>> print_square((2, 4, 5))
	Traceback (most recent call last):
		TypeError: size must be an integer

		::

>>> print_square(-9.7)
	Traceback (most recent call last):
		TypeError: size must be an integer

		::

>>> print_square(None)
	Traceback (most recent call last):
		TypeError: size must be an integer

		::

>>> print_square()
	Traceback (most recent call last):
		TypeError: print_square() missing 1 required positional argument: 'size'
